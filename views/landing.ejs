<% include ./partials/header %>

<body id="home">
<style>
  body,h1,h2,h3,h4,h5,h6 {font-family: "Helvetica Neue", Helvetica Neue}
  .w3-bar,h1,button {font-family: "Helvetica Neue", Helvetica Neue}
  .fa-anchor,.fa-coffee {font-size:200px}
  #home{
    background-image: url(https://i.pinimg.com/originals/31/0b/90/310b909e9696421cbc13d47e9cfda051.jpg);
  background-size: cover;
  background-attachment: fixed;
  }
  </style>
  
<!-- Header -->
<div class="w3-container w3-center" style="padding:128px 16px;font-color:white;" >

  <h1  class="w3-margin " style="color:white;">WE <i class="far fa-handshake"></i> PLAN</h1>

<br />

  <h1  style="color:white;font-size:25px;">We Plan <span class="typed"></span></h1>

<br />
<br />
  <div class="morph-button morph-button-modal morph-button-modal-3 morph-button-fixed">
    <button type="button">New User</button>
    <div class="morph-content">
      <div>
        <div class="content-style-form content-style-form-2">
          <span class="icon icon-close">Close the dialog</span>
          <h2>New User</h2>
          <form action="/register" method="POST">
            <div class="form-group">
              <input class="form-control" type="text" name="username" placeholder="username">
              </div>
                <div class="form-group">
                <input class="form-control" type="text" name="email" placeholder="email">
                </div>
                <div class="form-group">
                  <input class="form-control" type="text" name="phone" placeholder="phone no.">
                </div>
                <div class="form-group">
                <input class="form-control" type="password" name="password" placeholder="password">
                </div>
                <button class="btn btn-primary" type="submit">Sign Up</button>
            </form>
        </div>
      </div>
    </div>
  </div>


  <strong class="joiner">or</strong>

  <div class="morph-button morph-button-modal morph-button-modal-2 morph-button-fixed">
    <button type="button">MY Account</button>
    <div class="morph-content">
      <div>
        <div class="content-style-form content-style-form-1">
          <span class="icon icon-close">Close the dialog</span>
          <h2>My Account</h2>
          <form action="/login" method="POST" >
            <div class="form-group">
            <input class="form-control" type="text" name="username" placeholder="username">
            </div>
            <div class="form-group">
            <input class="form-control" type="password" name="password" placeholder="password">
            </div>
            <button class="btn btn-primary" value="login"  type="submit">Login</button>
        </form>
        </div>
      </div>
    </div>
  </div><!-- morph-button -->
<!-- Footer -->
<!-- <footer class="w3-container w3-padding-64 w3-center ">

 <p >Designed by <a class="w3-xlarge w3-white" href="http://mayanksharma.herokuapp.com" target="_blank">Mayank Sharma</a></p>
 <div class="w3-xlarge w3-padding-32">
   <a  href="https://www.facebook.com/mayank.sharma.370515"style="color:white;" target="_blank"><i class="fa fa-facebook-official w3-hover-opacity"></i></a>&nbsp;&nbsp;&nbsp;
  <a  href="https://www.linkedin.com/in/mayankshar/"style="color:white;" target="_blank"> <i class="fa fa-linkedin w3-hover-opacity"></i></a>&nbsp;&nbsp;&nbsp;
   <a  href="https://github.com/Mayank250199" style="color:white;" target="_blank"><i class="fa fa-github w3-hover-opacity"></i></a>
</div>
</footer> -->

<script src="https://tympanus.net/Development/ButtonComponentMorph/js/classie.js"></script>
   <script src="https://tympanus.net/Development/ButtonComponentMorph/js/uiMorphingButton_fixed.js"></script>
   <script>
       (function() {
           var docElem = window.document.documentElement,
               didScroll, scrollPosition;

           // trick to prevent scrolling when opening/closing button
           function noScrollFn() {
               window.scrollTo(scrollPosition ? scrollPosition.x : 0, scrollPosition ? scrollPosition.y : 0);
           }

           function noScroll() {
               window.removeEventListener('scroll', scrollHandler);
               window.addEventListener('scroll', noScrollFn);
           }

           function scrollFn() {
               window.addEventListener('scroll', scrollHandler);
           }

           function canScroll() {
               window.removeEventListener('scroll', noScrollFn);
               scrollFn();
           }

           function scrollHandler() {
               if (!didScroll) {
                   didScroll = true;
                   setTimeout(function() {
                       scrollPage();
                   }, 60);
               }
           };

           function scrollPage() {
               scrollPosition = {
                   x: window.pageXOffset || docElem.scrollLeft,
                   y: window.pageYOffset || docElem.scrollTop
               };
               didScroll = false;
           };

           scrollFn();

           [].slice.call(document.querySelectorAll('.morph-button')).forEach(function(bttn) {
               new UIMorphingButton(bttn, {
                   closeEl: '.icon-close',
                   onBeforeOpen: function() {
                       // don't allow to scroll
                       noScroll();
                   },
                   onAfterOpen: function() {
                       // can scroll again
                       canScroll();
                   },
                   onBeforeClose: function() {
                       // don't allow to scroll
                       noScroll();
                   },
                   onAfterClose: function() {
                       // can scroll again
                       canScroll();
                   }
               });
           });

          
       })();
   </script>
   <script>

   jQuery(document).ready(function($){
   //trigger the animation - open modal window
   $('[data-type="modal-trigger"]').on('click', function(){
     var actionBtn = $(this),
       scaleValue = retrieveScale(actionBtn.next('.cd-modal-bg'));

     actionBtn.addClass('to-circle');
     actionBtn.next('.cd-modal-bg').addClass('is-visible').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){
       animateLayer(actionBtn.next('.cd-modal-bg'), scaleValue, true);
     });

     //if browser doesn't support transitions...
     if(actionBtn.parents('.no-csstransitions').length > 0 ) animateLayer(actionBtn.next('.cd-modal-bg'), scaleValue, true);
   });

   //trigger the animation - close modal window
   $('.cd-section .cd-modal-close').on('click', function(){
     closeModal();
   });
   $(document).keyup(function(event){
     if(event.which=='27') closeModal();
   });

   $(window).on('resize', function(){
     //on window resize - update cover layer dimention and position
     if($('.cd-section.modal-is-visible').length > 0) window.requestAnimationFrame(updateLayer);
   });

   function retrieveScale(btn) {
     var btnRadius = btn.width()/2,
       left = btn.offset().left + btnRadius,
       top = btn.offset().top + btnRadius - $(window).scrollTop(),
       scale = scaleValue(top, left, btnRadius, $(window).height(), $(window).width());

     btn.css('position', 'fixed').velocity({
       top: top - btnRadius,
       left: left - btnRadius,
       translateX: 0,
     }, 0);

     return scale;
   }

   function scaleValue( topValue, leftValue, radiusValue, windowW, windowH) {
     var maxDistHor = ( leftValue > windowW/2) ? leftValue : (windowW - leftValue),
       maxDistVert = ( topValue > windowH/2) ? topValue : (windowH - topValue);
     return Math.ceil(Math.sqrt( Math.pow(maxDistHor, 2) + Math.pow(maxDistVert, 2) )/radiusValue);
   }

   function animateLayer(layer, scaleVal, bool) {
     layer.velocity({ scale: scaleVal }, 400, function(){
       $('body').toggleClass('overflow-hidden', bool);
       (bool)
         ? layer.parents('.cd-section').addClass('modal-is-visible').end().off('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend')
         : layer.removeClass('is-visible').removeAttr( 'style' ).siblings('[data-type="modal-trigger"]').removeClass('to-circle');
     });
   }

   function updateLayer() {
     var layer = $('.cd-section.modal-is-visible').find('.cd-modal-bg'),
       layerRadius = layer.width()/2,
       layerTop = layer.siblings('.btn').offset().top + layerRadius - $(window).scrollTop(),
       layerLeft = layer.siblings('.btn').offset().left + layerRadius,
       scale = scaleValue(layerTop, layerLeft, layerRadius, $(window).height(), $(window).width());

     layer.velocity({
       top: layerTop - layerRadius,
       left: layerLeft - layerRadius,
       scale: scale,
     }, 0);
   }

   function closeModal() {
     var section = $('.cd-section.modal-is-visible');
     section.removeClass('modal-is-visible').one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function(){
       animateLayer(section.find('.cd-modal-bg'), 1, false);
     });
     //if browser doesn't support transitions...
     if(section.parents('.no-csstransitions').length > 0 ) animateLayer(section.find('.cd-modal-bg'), 1, false);
   }
   });
   </script>


<% include ./partials/footer %>




